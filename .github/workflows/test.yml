name: Run Tests

on:
  pull_request:
    branches: [ main, developer ]
  push:
    branches: [ main, developer ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      NODE_OPTIONS: --experimental-vm-modules

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-for-ci
        EMAIL_VERIFICATION_SECRET: test-email-verification-secret
        AWS_REGION: us-east-1
        EMAIL_FROM: test@example.com
        EMAIL_VERIFICATION_EXPIRY: 24h
        AWS_ACCESS_KEY_ID: fake-access-key-for-tests
        AWS_SECRET_ACCESS_KEY: fake-secret-key-for-tests
        DYNAMODB_TABLE: test-table
        DYNAMODB_ENDPOINT: http://localhost:8000

    - name: Run test coverage
      run: npm run test:cov
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-for-ci
        EMAIL_VERIFICATION_SECRET: test-email-verification-secret
        AWS_REGION: us-east-1
        EMAIL_FROM: test@example.com
        AWS_ACCESS_KEY_ID: fake-access-key-for-tests
        AWS_SECRET_ACCESS_KEY: fake-secret-key-for-tests
        DYNAMODB_TABLE: test-table
        DYNAMODB_ENDPOINT: http://localhost:8000

    - name: Check test coverage
      run: |
        COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
        if (( $(echo "$COVERAGE < 90" | bc -l) )); then
          echo "Test coverage is below 90%: $COVERAGE%"
          exit 1
        else
          echo "Test coverage is $COVERAGE%"
        fi